server:
  port: 8090

spring:
  application:
    name: userMS
  profiles:
    active: "dev"
  # PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/userDb
    username: postgres
    password: root
  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

info:
  app:
    name: "user"
    description: "SaltyFish User Application"
    version: "1.0.0"

logging:
  level:
    com:
      saltyfish:
        user: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j:
  circuitBreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffBase: 2
        ignoreExceptions:
          - java.lang.NullPointerException
        retryExceptions:
          - java.util.cuncurrent.TimeoutException
  ratelimiter:
    configs:
      default:
        timeoutDuration: 1000
        limitRefreshPeriod: 5000
        limitForPeriod: 1

build:
  version: "1.0"